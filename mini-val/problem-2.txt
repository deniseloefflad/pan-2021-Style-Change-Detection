I've been doing minor kernel work since the 1.2 days, so it's just possible I'm behind the times. I'm sure others will chime in if I'm off base :)
If it doesn't work, perhaps there were interesting error messages when you booted. Boot back to your stock kernel and rebuild the bits you need. Install. Wash, rinse, repeat until you've booted. Hooray! You're now running a stock kernel.
That tells it to just make the modules in that directory. That way you don't have to rebuild the entire thing. If you've booted into that kernel, you can safely copy out the old modules from /lib/modules and copy in the new ones, rmmod, insmod, and load the new module (assuming you can). You can wash, rinse, repeat with this method many times.
To make a kernel from source is actually a pretty well documented method. Once you've done the final make install it's time to make sure your bootloader knows about it. The exact method depends on your distribution, but go into your bootloader configurator and make a new entry for the kernel you just compiled. Keep the current entries. If all goes well, on your next reboot you can boot to that kernel.
Assuming you really are kernel hacking, I'm assuming you're just tweaking modules or perhaps making new. In that case, you need to be very aware of 
For this kind of thing, Grub is your friend (assuming you're using Grub. If not, LILO can do most of this too). Your current kernel is a great home-base, keep that, don't touch it. 