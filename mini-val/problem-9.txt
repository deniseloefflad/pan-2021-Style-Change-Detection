You can do this from IIS Manager by editing the handler for Siteminder, clicking on Request Restrictions and make sure that the Mapping checkbox is unchecked.  
We are following this work around. This must be implemented with caution as there is a chance that the Siteminder cookie could be invalidated but not checked by siteminder as the request wont go thru siteminder for MVC requests.
v)  On this page, after authentication, the user can be redirected to the main URL that was requested earlier. As this time we have the SSO session cookie, so the request will not be redirected in the AuthenticateRequest and would be responded to by MVC. 
iv) If a request for a page that is not in the MVC routing table comes in, the SiteMinder will come into action as the URLMappingsModule will not route this to the MVC handler as expected.
i)  In the AuthenticateRequest method in Global.asax check to see if the SSO session cookie is there in the request.
A request can be executed by any ONE handler, but can be worked upon by multiple modules. When a request comes in the URLRoutingModule routes the requests to the handler for MVC (if a map for it exists in the routing table as defined in the Application_Start event of the Global.asax), and the SiteMinder handler is never invoked. Since only one handler can execute the request and in this case it should be the MVC handler SiteMinder login page never comes up. One handler executing a request is a by design behavior.
Alternately, if you do this directly from applicationHost.config, set the resourceType to "Unspecified".  This will cause the handler to process all requests, whether or not the file or folder exists.